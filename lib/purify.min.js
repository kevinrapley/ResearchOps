/* Simple DOM sanitizer (ESM) — strips scripts, iframes, styles, event handlers, javascript: URLs */
const FORBID_TAGS = new Set(["script", "iframe", "object", "embed", "link", "style", "meta", "base"]);
const FORBID_ATTR_PREFIX = /^on/i; // onclick, onload…
const URL_ATTRS = new Set(["href", "src", "xlink:href", "formaction"]);

function sanitize(html, _opts = {}) {
	if (!html) return "";
	const parser = new DOMParser();
	const doc = parser.parseFromString(String(html), "text/html");
	const walker = doc.createTreeWalker(doc.body, NodeFilter.SHOW_ELEMENT, null);

	let node = walker.currentNode;
	while (node) {
		const tag = node.tagName ? node.tagName.toLowerCase() : "";
		if (FORBID_TAGS.has(tag)) {
			const rm = node;
			node = walker.nextSibling() || walker.parentNode; // move before remove
			rm.remove();
			continue;
		}
		// scrub attributes
		for (const attr of Array.from(node.attributes)) {
			const name = attr.name.toLowerCase();
			const val = attr.value || "";
			if (FORBID_ATTR_PREFIX.test(name)) { node.removeAttribute(attr.name); continue; }
			if (URL_ATTRS.has(name)) {
				const v = val.trim();
				if (/^javascript:/i.test(v) || /^data:text\/html/i.test(v)) {
					node.removeAttribute(attr.name);
					continue;
				}
			}
		}
		node = walker.nextNode();
	}
	return doc.body.innerHTML;
}

const DOMPurify = { sanitize };
export { sanitize };
export default DOMPurify;